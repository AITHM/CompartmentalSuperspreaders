sign_test(-1)
all(I_inf$vectors >= 0)
all(I_inf$vectors[,c(1:n_strains)] >= 0)
sign_test <- function(m) {((all(m) >= 0))}
sign_test(1)
sign_test(-1)
apply(I_inf$vectors, 2, all)
I_inf$vectors[,apply(I_inf$vectors, 2, all)]
I_inf$vectors
I_inf$vectors[,apply(I_inf$vectors, 1, all)]
I_inf$vectors[,apply(I_inf$vectors, 2, all)]
I_inf$vectors[,sapply(I_inf$vectors, 2, all)]
I_inf$vectors[,sapply(I_inf$vectors, all)]
I_inf$vectors[,lapply(I_inf$vectors, 2, all)]
I_inf$vectors[,apply(I_inf$vectors, 2, all)]
mean(I_inf$vectors[,apply(I_inf$vectors, 2, all)])
all(I_inf$vector[,1])
all(I_inf$vector[,1] >= 0)
I_inf$vectors[,apply(I_inf$vectors >= 0, 2, all)]
I_inf$vectors[,apply(I_inf$vectors <= 0, 2, all)]
I_inf$vectors[,apply(I_inf$vectors >= 0, 2, all)]
I_stable_abs <- lambda*(R_0_max -1)*I_stable_n/(((N_init)/(N_init - 1)*diag(B) - R_0_max*diag(Gamma)%*%ginv(mu*diag(n_strains) + Gamma)%*%H)%*%I_stable_n)
I_stable_n <- I_inf$vectors[,apply(I_inf$vectors >= 0, 2, all)]
# Calculate the absolute magnitude of the endemic infectious population
I_stable_abs <- lambda*(R_0_max -1)*I_stable_n/(((N_init)/(N_init - 1)*diag(B) - R_0_max*diag(Gamma)%*%ginv(mu*diag(n_strains) + Gamma)%*%H)%*%I_stable_n)
I_stable_abs
source('C:/Users/jc213439/Dropbox/Coupled multi-strain model/R programs/SIR_n_strains.R')
rm(list = ls())
source('C:/Users/jc213439/Dropbox/Coupled multi-strain model/R programs/SIR_n_strains.R')
I_stable_abs
diag(R_0)
which.max(diag(R_0))
R_0
I_inf$vectors
apply(I_inf$vectors ~= 0, 2, min)
I_inf$vectors[,apply(I_inf$vectors != 0, 2, min)]
apply(I_inf$vectors != 0, 2, min)
I_inf$vectors != 0
apply(which(I_inf$vectors != 0), 2, min)
which(I_inf$vectors!= 0)
apply(I_inf$vectors, 2, which)
S_inf_stable <- min(c(S_inf[S_inf > 0], N_init))
S_inf_stable
N_init <- 10
S_inf_stable <- min(c(S_inf[S_inf > 0], N_init))
S_inf_stable
descendant_seq <- seq(from = dominant_strain, to = n_strains, by = 1)
descendant_seq
## Calculate the generalized next-generation matrix
K_gen <- ginv(B)%*%K%*%B
I_inf <- eigen(K_gen)
## Extract the (normalized) stable solution, i.e. the eigenvector with all positive elements
d_seq <- seq(from = dominant_strain, to = n_strains, by = 1)
K_gen_sub <- K_gen[d_seq,d_seq]
K_gen_sub
d_seq <- seq(from = dominant_strain - 3, to = n_strains, by = 1)
K_gen_sub <- K_gen[d_seq,d_seq]
K_gen_sub
d_seq <- seq(from = dominant_strain + 1, to = n_strains, by = 1)
K_gen[-1,-1]
K_gen[-2,-2]
K_gen
K_gen[-d_seq,-d_seq]
d_seq
d_seq <- seq(from = 1, to = dominant_strain, by = 1)
d_seq
diag(n_strains - dominant_strain)
K_gen_sub <- K_gen[-a_seq,-a_seq] - R_0_max*diag(n_strains - dominant_strain)
a_seq <- seq(from = 1, to = dominant_strain, by = 1)
K_gen_sub <- K_gen[-a_seq,-a_seq] - R_0_max*diag(n_strains - dominant_strain)
a_seq
K_gen_sub
K_gen_vec <- K_gen[-a_seq,dominant_strain]
K_gen_vec
a_seq <- seq(from = 1, to = dominant_strain, by = 1)
K_gen_sub <- K_gen[-a_seq,-a_seq] - R_0_max*diag(n_strains - dominant_strain)
K_gen_vec <- K_gen[-a_seq,dominant_strain]
I_stable_n <- c(repmat(0,a_seq - 1),1,-ginv(K_gen_sub)%*%K_gen_vec)
a_seq <- seq(from = 1, to = dominant_strain, by = 1)
K_gen_sub <- K_gen[-a_seq,-a_seq] - R_0_max*diag(n_strains - dominant_strain)
K_gen_vec <- K_gen[-a_seq,dominant_strain]
I_stable_n <- c(rep(0,a_seq - 1),1,-ginv(K_gen_sub)%*%K_gen_vec)
a_seq
I_stable_n <- c(rep(0,length(a_seq) - 1),1,-ginv(K_gen_sub)%*%K_gen_vec)
ginv(K_gen_sub)
if(dominant_strain < n_strains){
I_stable_n <- c(rep(0,length(a_seq) - 1),1,-ginv(K_gen_sub)%*%K_gen_vec)
} else {
I_stable_n <- c(rep(0,n_strains -1),1)
}
I_stable_n
dominant_strain <- 2
a_seq <- seq(from = 1, to = dominant_strain, by = 1)
K_gen_sub <- K_gen[-a_seq,-a_seq] - R_0_max*diag(n_strains - dominant_strain)
K_gen_vec <- K_gen[-a_seq,dominant_strain]
if(dominant_strain < n_strains){
I_stable_n <- c(rep(0,length(a_seq) - 1),1,-ginv(K_gen_sub)%*%K_gen_vec)
} else {
I_stable_n <- c(rep(0,n_strains -1),1)
}
I_stable_n
source('C:/Users/jc213439/Dropbox/Coupled multi-strain model/R programs/SIR_n_strains.R')
I_stable_n
I_stable_abs
B <- diag(c(1,20,1,1))
B
source('C:/Users/jc213439/Dropbox/Coupled multi-strain model/R programs/SIR_n_strains.R')
R_0
S_inf
I_inf_abs
I_stable_abs
source('C:/Users/jc213439/Dropbox/Coupled multi-strain model/R programs/SIR_n_strains.R')
source('C:/Users/jc213439/Dropbox/Coupled multi-strain model/R programs/SIR_n_strains.R')
S_inf
library(lubridate)
(x = yday(Sys.Date()))
qpois(c(0.025, 0.975), 149 / x * (365 - x)) + 149
258.15/7.25
library("rmarkdown")
library(rmarkdown)
install.packages("installr")
library(installr)
updateR()
0.11 / (0.11 + 0.02)
0.11 / (0.11 + 0.02) * 1/2
2 / 0.4
2 / 0.42
library(rmarkdown)
install.packages("rmarkdown")
install.packages("rmarkdown")
install.packages("rmarkdown")
library(rmarkdown)
setwd("C:\Users/jc213439/Des")
library(lubridate)
(x = yday(Sys.Date()))
qpois(c(0.025, 0.975), 92/x * (365 - x)) + 92
(x = yday(Sys.Date()))
qpois(c(0.025, 0.975), 150/x * (365 - x)) + 150
qpois(c(0.025, 0.975), 93/x * (365 - x)) + 93
(x = yday(Sys.Date()))
qpois(c(0.025, 0.975), 156/x * (365 - x)) + 156
(x = yday(Sys.Date()))
qpois(c(0.025, 0.975), 95/x * (365 - x)) + 95
(x = yday(Sys.Date()))
qpois(c(0.025, 0.975), 174/x * (365 - x)) + 174
library(quarto)
library(rmarkdown)
library(markdown)
library(quarto)
quarto_render("C:/InfectiousDiseasesCourse-AITHM/Session_1/Introduction.qmd")
.libPaths()
library(lubridate)
(x = yday(Sys.Date()))
qpois(c(0.025, 0.975), 177/x*(365-x)) + 177
setwd("C:/Users/jc213439/.julia/dev/CompartmentalSuperspreaders/")
# Import utils and load required libraries
source("outputs/plot_utils.R")
### Data imports ###
data_dir = "data/offspring/"
output_dir = "outputs/offspring/baseline/"   # Edit the final directory to obtain sensitivity results (e.g., baseline -> k3)
# Offspring data
offspring = read_input(data_dir)
# Model predictions
model_fits = read_output("model_fit")
# Model performance
score_summary = read_output("score_summary")
score_summary = append_Î”AICc(score_summary %>% filter(Model != "Zero-inflated"))
# Model parameters
parms_summary = read_output("parm_summary")
# Parameter chains
full_chain = read_output("full_chain")
# Model performance
score_summary = read_output("score_summary")
score_summary$k = 1
sensk2_scores = read_output("score_summary", output_dir =  "./outputs/offspring/k2/")
sensk2_scores$k = 2
sensk3_scores = read_output("score_summary", output_dir =  "./outputs/offspring/k3/")
sensk3_score$k = 3
sensk3_scores$k = 3
all_scores = rbind(score_summary, sensk2_scores, sensk3_scores)
head(all_scores)
ggplot(all_scores, aes(x = Label, col=Pathogen, shape=k)) +
geom_point(aes(y=AICc), position=position_dodge2(width=0.75), size=3) +
xlab("") +
ylab(ylabel) +
custom_theme + theme(axis.text.x = element_text(angle = 60, hjust=1), legend.position = c(0.2,0.65)) +
scale_col_pathogen() +
scale_shape_model()
ggplot(all_scores, aes(x = Label, col=Pathogen, shape=k)) +
geom_point(aes(y=AICc), position=position_dodge2(width=0.75), size=3) +
xlab("") +
ylab("") +
custom_theme + theme(axis.text.x = element_text(angle = 60, hjust=1), legend.position = c(0.2,0.65)) +
scale_col_pathogen() +
scale_shape_model()
head(AICc)
head(all_scores)
ggplot(all_scores %>% filter(Model == "SEIR(2)"), aes(x = Label, col=Pathogen, shape=k)) +
geom_point(aes(y=AICc), position=position_dodge2(width=0.75), size=3) +
xlab("") +
ylab("") +
custom_theme + theme(axis.text.x = element_text(angle = 60, hjust=1), legend.position = c(0.2,0.65)) +
scale_col_pathogen() +
scale_shape_model()
all_scores %>% filter(Model == "SEIR(2)")
all_scores$k = factor(all_scores$k)
ggplot(all_scores %>% filter(Model == "SEIR(2)"), aes(x = Label, col=Pathogen, shape=k)) +
geom_col(aes(y=AICc), position=position_dodge2(width=0.75)) +
xlab("") +
ylab("") +
custom_theme + theme(axis.text.x = element_text(angle = 60, hjust=1), legend.position = c(0.2,0.65)) +
scale_col_pathogen() +
scale_shape_model()
ggplot(all_scores %>% filter(Model == "SEIR(2)"), aes(x = Label, col=Pathogen, shape=k)) +
geom_col(aes(y=AICc), position=position_dodge2(width=0.75))
ggplot(all_scores %>% filter(Model == "SEIR(2)"), aes(x = Label, col=Pathogen, shape=k)) +
geom_col(aes(y=AICc), position=position_dodge2(width=0.75)) +
xlab("") +
ylab("") +
custom_theme
ggplot(all_scores %>% filter(Model == "SEIR(2)"), aes(x = Label, col=Pathogen, shape=k)) +
geom_col(aes(y=AICc), position=position_dodge2(width=0.75)) +
xlab("") +
ylab("") +
custom_theme + theme(axis.text.x = element_text(angle = 60, hjust=1))
ggplot(all_scores %>% filter(Model == "SEIR(2)"), aes(x = Label, col=Pathogen, shape=k)) +
geom_col(aes(y=AICc), position=position_dodge2(width=0.75)) +
xlab("") +
ylab("") +
custom_theme + theme(axis.text.x = element_text(angle = 60, hjust=1)) +
scale_col_pathogen()
ggplot(all_scores %>% filter(Model == "SEIR(2)"), aes(x = Label, col=Pathogen, fill=Pathogen, shape=k)) +
geom_col(aes(y=AICc), position=position_dodge2(width=0.75)) +
xlab("") +
ylab("") +
custom_theme + theme(axis.text.x = element_text(angle = 60, hjust=1)) +
scale_col_pathogen()
all_scores %>%
filter(Model == "SEIR(2)") %>%
group_by(Dataset) %>%
mutate(Rel = (AICc - min(AICc) / min(AICc)))
all_scores %>%
filter(Model == "SEIR(2)") %>%
group_by(Dataset) %>%
mutate(Rel = (AICc - min(AICc) / min(AICc))) %>%
ggplot(, aes(x = Label, col=Pathogen, fill=Pathogen, shape=k)) +
geom_col(aes(y=Rel), position=position_dodge2(width=0.75)) +
xlab("") +
ylab("") +
custom_theme + theme(axis.text.x = element_text(angle = 60, hjust=1)) +
scale_col_pathogen()
all_scores %>%
filter(Model == "SEIR(2)") %>%
group_by(Dataset) %>%
mutate(Rel = (AICc - min(AICc) / min(AICc)))
all_scores %>%
filter(Model == "SEIR(2)") %>%
group_by(Dataset) %>%
mutate(Rel = (AICc - min(AICc)) / min(AICc))
all_scores %>%
filter(Model == "SEIR(2)") %>%
group_by(Dataset) %>%
mutate(Rel = (AICc - min(AICc)) / min(AICc)) %>%
ggplot(, aes(x = Label, col=Pathogen, fill=Pathogen, shape=k)) +
geom_col(aes(y=Rel), position=position_dodge2(width=0.75)) +
xlab("") +
ylab("") +
custom_theme + theme(axis.text.x = element_text(angle = 60, hjust=1)) +
scale_col_pathogen()
all_scores %>%
filter(Model == "SEIR(2)") %>%
group_by(Dataset) %>%
mutate(Rel = (AICc - min(AICc)) / min(AICc)) %>%
ungroup() %>%
ggplot(, aes(x = Label, col=Pathogen, fill=Pathogen, shape=k)) +
geom_col(aes(y=Rel), position=position_dodge2(width=0.75)) +
xlab("") +
ylab("") +
custom_theme + theme(axis.text.x = element_text(angle = 60, hjust=1)) +
scale_col_pathogen()
all_scores %>%
filter(Model == "SEIR(2)") %>%
group_by(Dataset) %>%
mutate(Rel = (AICc - min(AICc)) / min(AICc)) %>%
ungroup() %>%
ggplot(, aes(x = Label, col=Pathogen, fill=Pathogen, shape=k)) +
geom_col(aes(y=Rel), position=position_dodge2(width=0.75))
all_scores %>%
filter(Model == "SEIR(2)") %>%
group_by(Dataset) %>%
mutate(Rel = (AICc - min(AICc)) / min(AICc)) %>%
ungroup() %>%
ggplot(aes(x = Label, col=Pathogen, fill=Pathogen, shape=k)) +
geom_col(aes(y=Rel), position=position_dodge2(width=0.75)) +
xlab("") +
ylab("") +
custom_theme + theme(axis.text.x = element_text(angle = 60, hjust=1)) +
scale_col_pathogen()
head(all_scores)
all_scores %>%
filter(Model == "SEIR(2)") %>%
group_by(Dataset) %>%
mutate(Rel = (AICc - min(AICc)) / min(AICc) * 100) %>%
ungroup() %>%
ggplot(aes(x = Label, col=Pathogen, fill=Pathogen, shape=k)) +
geom_col(aes(y=Rel), position=position_dodge2(width=0.75)) +
xlab("") +
ylab("") +
custom_theme + theme(axis.text.x = element_text(angle = 60, hjust=1)) +
scale_col_pathogen()
all_scores %>%
filter(Model == "SEIR(2)") %>%
group_by(Dataset) %>%
mutate(Rel = (AICc - min(AICc)) / min(AICc) * 100) %>%
ungroup() %>%
ggplot(aes(x = Label, col=Pathogen, fill=Pathogen, shape=k, y=Rel)) +
geom_col(aes(y=Rel), position=position_dodge2(width=0.75)) +
geom_point(size=2) +
xlab("") +
ylab("") +
custom_theme + theme(axis.text.x = element_text(angle = 60, hjust=1)) +
scale_col_pathogen()
all_scores %>%
filter(Model == "SEIR(2)") %>%
group_by(Dataset) %>%
mutate(Rel = (AICc - min(AICc)) / min(AICc) * 100) %>%
ungroup() %>%
ggplot(aes(x = Label, col=Pathogen, fill=Pathogen, shape=k, y=Rel)) +
geom_col(aes(y=Rel), position=position_dodge2(width=0.75)) +
geom_point(size=2, position=position_dodge2(width=0.75)) +
xlab("") +
ylab("") +
custom_theme + theme(axis.text.x = element_text(angle = 60, hjust=1)) +
scale_col_pathogen()
all_scores %>%
filter(Model == "SEIR(2)") %>%
group_by(Dataset) %>%
mutate(Rel = (AICc - min(AICc)) / min(AICc) * 100) %>%
ungroup() %>%
ggplot(aes(x = Label, col=Pathogen, fill=Pathogen, shape=k, y=Rel)) +
geom_col(aes(y=Rel), position=position_dodge2(width=0.75)) +
geom_point(size=2, position=position_dodge2(width=0.75)) +
xlab("") +
ylab("") +
custom_theme + theme(axis.text.x = element_text(angle = 60, hjust=1), legend.position="right") +
scale_col_pathogen()
all_scores %>%
filter(Model == "SEIR(2)") %>%
group_by(Dataset) %>%
mutate(Rel = (AICc - min(AICc)) / min(AICc) * 100) %>%
ungroup() %>%
ggplot(aes(x = Label, fill=Pathogen, shape=k, y=Rel)) +
geom_col(aes(col=Pathogen), position=position_dodge2(width=0.75)) +
geom_point(size=2, position=position_dodge2(width=0.75)) +
xlab("") +
ylab("") +
custom_theme + theme(axis.text.x = element_text(angle = 60, hjust=1), legend.position="right") +
scale_col_pathogen()
all_scores %>%
filter(Model == "SEIR(2)") %>%
group_by(Dataset) %>%
mutate(Rel = (AICc - min(AICc)) / min(AICc) * 100) %>%
ungroup() %>%
ggplot(aes(x = Label, shape=k, y=Rel)) +
geom_col(aes(fill = k), position=position_dodge2(width=0.75)) +
geom_point(size=2, position=position_dodge2(width=0.75)) +
xlab("") +
ylab("") +
custom_theme + theme(axis.text.x = element_text(angle = 60, hjust=1), legend.position="right") +
scale_col_pathogen()
all_scores %>%
filter(Model == "SEIR(2)") %>%
group_by(Dataset) %>%
mutate(Rel = (AICc - min(AICc)) / min(AICc) * 100) %>%
ungroup() %>%
ggplot(aes(x = Label, shape=k, y=Rel)) +
geom_col(aes(fill = k), position=position_dodge2(width=0.75)) +
# geom_point(size=2, position=position_dodge2(width=0.75)) +
xlab("") +
ylab("") +
custom_theme + theme(axis.text.x = element_text(angle = 60, hjust=1), legend.position="right") +
scale_col_pathogen()
all_scores %>%
filter(Model == "SEIR(2)") %>%
group_by(Dataset) %>%
mutate(Rel = AICc / min(AICc)) %>%
ungroup() %>%
ggplot(aes(x = Label, shape=k, y=Rel)) +
geom_col(aes(fill = k), position=position_dodge2(width=0.75)) +
# geom_point(size=2, position=position_dodge2(width=0.75)) +
xlab("") +
ylab("") +
custom_theme + theme(axis.text.x = element_text(angle = 60, hjust=1), legend.position="right") +
scale_col_pathogen()
all_scores %>%
filter(Model == "SEIR(2)") %>%
group_by(Dataset) %>%
mutate(Rel = AICc - min(AICc)) %>%
ungroup() %>%
ggplot(aes(x = Label, shape=k, y=Rel)) +
geom_col(aes(fill = k), position=position_dodge2(width=0.75)) +
# geom_point(size=2, position=position_dodge2(width=0.75)) +
xlab("") +
ylab("") +
custom_theme + theme(axis.text.x = element_text(angle = 60, hjust=1), legend.position="right") +
scale_col_pathogen()
all_scores %>%
filter(Model == "SEIR(2)") %>%
group_by(Dataset) %>%
mutate(Rel = AICc - min(AICc)) %>%
ungroup() %>%
ggplot(aes(x = Label, shape=k, y=Rel)) +
geom_col(aes(fill = k), position=position_dodge2(width=0.75)) +
facet_grid(Label ~ .) +
# geom_point(size=2, position=position_dodge2(width=0.75)) +
xlab("") +
ylab("") +
custom_theme + theme(axis.text.x = element_text(angle = 60, hjust=1), legend.position="right") +
scale_col_pathogen()
all_scores %>%
filter(Model == "SEIR(2)") %>%
group_by(Dataset) %>%
mutate(Rel = AICc - min(AICc)) %>%
ungroup() %>%
ggplot(aes(x = Label, shape=k, y=Rel)) +
geom_col(aes(fill = k), position=position_dodge2(width=0.75)) +
facet_wrap(Label ~ .) +
# geom_point(size=2, position=position_dodge2(width=0.75)) +
xlab("") +
ylab("") +
custom_theme + theme(axis.text.x = element_text(angle = 60, hjust=1), legend.position="right") +
scale_col_pathogen()
all_scores %>%
filter(Model == "SEIR(2)") %>%
group_by(Dataset) %>%
mutate(Rel = AICc - min(AICc)) %>%
ungroup() %>%
ggplot(aes(x = Label, shape=k, y=Rel)) +
geom_col(aes(fill = k), position=position_dodge2(width=0.75)) +
facet_wrap(Label ~ ., scales="free") +
# geom_point(size=2, position=position_dodge2(width=0.75)) +
xlab("") +
ylab("") +
custom_theme + theme(axis.text.x = element_text(angle = 60, hjust=1), legend.position="right") +
scale_col_pathogen()
all_scores %>%
filter(Model == "SEIR(2)") %>%
group_by(Dataset) %>%
mutate(Rel = AICc - min(AICc)) %>%
ungroup() %>%
ggplot(aes(x = Label, shape=k, y=Rel)) +
geom_col(aes(fill = k), position=position_dodge2(width=0.75)) +
facet_wrap(Label ~ ., scales="free") +
# geom_point(size=2, position=position_dodge2(width=0.75)) +
xlab("") +
ylab("") +
custom_theme +
scale_col_pathogen()
all_scores %>%
filter(Model == "SEIR(2)") %>%
group_by(Dataset) %>%
mutate(Rel = AICc - min(AICc)) %>%
ungroup() %>%
ggplot(aes(x = k,  y=Rel)) +
geom_col(aes(fill = k), position=position_dodge2(width=0.75)) +
facet_wrap(Label ~ ., scales="free") +
# geom_point(size=2, position=position_dodge2(width=0.75)) +
xlab("") +
ylab("") +
custom_theme +
scale_col_pathogen()
all_scores %>%
filter(Model == "SEIR(2)") %>%
group_by(Dataset) %>%
mutate(Rel = AICc - min(AICc)) %>%
ungroup() %>%
ggplot(aes(x = k,  y=Rel)) +
geom_col(aes(fill = Pathogen), position=position_dodge2(width=0.75)) +
facet_wrap(Label ~ ., scales="free") +
# geom_point(size=2, position=position_dodge2(width=0.75)) +
xlab("Serial compartments") +
ylab("") +
custom_theme +
scale_col_pathogen()
all_scores %>%
filter(Model == "SEIR(2)") %>%
group_by(Dataset) %>%
mutate(Rel = AICc - min(AICc)) %>%
ungroup() %>%
ggplot(aes(x = k,  y=Rel)) +
geom_col(aes(fill = Pathogen), position=position_dodge2(width=0.75)) +
facet_wrap(Label ~ ., scales="free") +
# geom_point(size=2, position=position_dodge2(width=0.75)) +
xlab("Serial compartments") +
ylab("Absolute change in AICc") +
custom_theme +
scale_col_pathogen()
ggsave(paste0(output_dir, "k_sensitivity_AICc.png"), dpi=600, width=14, height=14)
(x = yday(Sys.Date()))
qpois(c(0.025, 0.975), 189/x*(365 - x)) + 189
(score_summary %>% filter(Model == "Negative Binomial"))
(x = yday(Sys.Date()))
qpois(c(0.025, 0.975), 114/x*(365 - x)) + 114
original = read.csv("C:/Users/jc213439/Downloads/Classlist_Results (1).xls")
original = read.csv("C:/Users/jc213439/Downloads/Classlist_Results_original.xls")
original = read.csv("C:/Users/jc213439/Downloads/Classlist_Results_original.xls")
original = read.csv("C:/Users/jc213439/Downloads/Classlist_Results_original.csv")
updated = read.csv("C:/Users/jc213439/Downloads/Classlist_Results_updated.csv")
setdiff(original$LAST.NAME, updated$LAST.NAME)
setdiff(updated$LAST.NAME, original$LAST.NAME)
rm(list=ls())
x = 2
