arrange(Dataset, Model) %>%
filter(Model %in% c("Negative Binomial", "Two-type", "Clinical")) %>%
mutate(n = as.vector(sapply(max.offspring$Max.n, function(x) x * c(0.9, 0.7, 0.5))),
wr = paste0("w = ", round(w, 2)),
# aiccs = paste0("AICc = ", signif(AICc, 4)))
aiccs = (expression(AIC[c])))#, " = ", signif(AICc, 4)))
score_text = score_summary %>%
arrange(Dataset, Model) %>%
filter(Model %in% c("Negative Binomial", "Two-type", "Clinical")) %>%
mutate(n = as.vector(sapply(max.offspring$Max.n, function(x) x * c(0.9, 0.7, 0.5))),
wr = paste0("w = ", round(w, 2)),
# aiccs = paste0("AICc = ", signif(AICc, 4)))
aiccs = paste0(expression(AIC[c]), " = ", signif(AICc, 4)))
head(score_text)
summary(score_text)
x = expression(x[1])
class(x)
sapply(function(x) expression(AIC[c]=signif(x, 4)), score_summary$AICc)
sapply(function(x) expression(AIC[c] ~ signif(x, 4)), score_summary$AICc)
sapply(score_summary$AICc, function(x) expression(AIC[c] ~ signif(x, 4)))
sapply(score_summary$AICc, function(x) expression(AIC[c] ~ signif(x, 4))) %>% class
?expression
expression(1 + 0:9)
x = expression(1 + 0:9)
eval(x)
x = expression(u, 2, u + 0:9)
eval(x)
x[3]
x
x[[3]]
x[1]
x[2]
x[[1]]
x[[2]]
sapply(x, mode)
sapply(score_summary$AICc, function(x) expression(paste0(AIC[c] ~ signif(x, 4))))
expression(paste0("AIC[c] = score_summary$AICc[1]"))
expression(paste0("AIC[c] =", score_summary$AICc[1]))
paste0("AIC[c] =", score_summary$AICc[1])
paste0("AIC[c] =", score_summary$AICc[1]) %>% expression
expression(paste0("AIC[c] =", score_summary$AICc[1]))
x = paste0("AIC[c] = ", score_summary$AICc[1]) %>% expression
as.expression(x)
expression(x)
x
x = paste0("AIC[c] = ", score_summary$AICc[1])
x
as.expression(x)
score_text = score_summary %>%
arrange(Dataset, Model) %>%
filter(Model %in% c("Negative Binomial", "Two-type", "Clinical")) %>%
mutate(n = as.vector(sapply(max.offspring$Max.n, function(x) x * c(0.9, 0.7, 0.5))),
wr = paste0("w = ", round(w, 2)),
# aiccs = paste0("AICc = ", signif(AICc, 4)))
aiccs = as.expression(paste0("AIC[c] = ", signif(AICc, 4))))
score_text = score_summary %>%
arrange(Dataset, Model) %>%
filter(Model %in% c("Negative Binomial", "Two-type", "Clinical")) %>%
mutate(n = as.vector(sapply(max.offspring$Max.n, function(x) x * c(0.9, 0.7, 0.5))),
wr = paste0("w = ", round(w, 2)),
# aiccs = paste0("AICc = ", signif(AICc, 4)))
aiccs = paste0("AIC[c] = ", signif(AICc, 4)))
ggplot(model_accum, aes(x=Zalt)) +
geom_bar(data=offspring_accum, aes(weight=count, fill=Pathogen), alpha=1.) +
geom_point(aes(y = count, col=Model, shape=Model), size=3) +
geom_line(aes(y = count, group=Model, col=Model, lty=Model), lwd=1) +
geom_text(data=score_text, aes(y=n, label=as.expression(aiccs), col=Model), size=6, family="serif") +
facet_wrap(Label ~ ., scales="free") +
xlab("Secondary cases (Z)") +
ylab("Frequency") +
scale_x_discrete(labels = Zalt_ticks) +
scale_y_continuous(label=scales::comma) +
custom_theme +
scale_fill_pathogen() +
scale_col_model() +
scale_shape_model() +
guides(fill = guide_legend(nrow=4),
col = guide_legend(nrow=3))
ggplot(model_accum, aes(x=Zalt)) +
geom_bar(data=offspring_accum, aes(weight=count, fill=Pathogen), alpha=1.) +
geom_point(aes(y = count, col=Model, shape=Model), size=3) +
geom_line(aes(y = count, group=Model, col=Model, lty=Model), lwd=1) +
geom_text(data=score_text, aes(y=n, label=aiccs, col=Model), size=6, family="serif") +
facet_wrap(Label ~ ., scales="free") +
xlab("Secondary cases (Z)") +
ylab("Frequency") +
scale_x_discrete(labels = Zalt_ticks) +
scale_y_continuous(label=scales::comma) +
custom_theme +
scale_fill_pathogen() +
scale_col_model() +
scale_shape_model() +
guides(fill = guide_legend(nrow=4),
col = guide_legend(nrow=3))
score_text = score_summary %>%
arrange(Dataset, Model) %>%
filter(Model %in% c("Negative Binomial", "Two-type", "Clinical")) %>%
mutate(n = as.vector(sapply(max.offspring$Max.n, function(x) x * c(0.9, 0.7, 0.5))),
wr = paste0("w = ", round(w, 2)),
# aiccs = paste0("AICc = ", signif(AICc, 4)))
aiccs = paste0("AIC[c] = ", signif(AICc, 4)))
score_text$Zalt = 10.5
ggplot(model_accum, aes(x=Zalt)) +
geom_bar(data=offspring_accum, aes(weight=count, fill=Pathogen), alpha=1.) +
geom_point(aes(y = count, col=Model, shape=Model), size=3) +
geom_line(aes(y = count, group=Model, col=Model, lty=Model), lwd=1) +
geom_text(data=score_text, aes(y=n, label=aiccs, col=Model), size=6, family="serif") +
facet_wrap(Label ~ ., scales="free") +
xlab("Secondary cases (Z)") +
ylab("Frequency") +
scale_x_discrete(labels = Zalt_ticks) +
scale_y_continuous(label=scales::comma) +
custom_theme +
scale_fill_pathogen() +
scale_col_model() +
scale_shape_model() +
guides(fill = guide_legend(nrow=4),
col = guide_legend(nrow=3))
ggplot(model_accum, aes(x=Zalt)) +
geom_bar(data=offspring_accum, aes(weight=count, fill=Pathogen), alpha=1.) +
geom_point(aes(y = count, col=Model, shape=Model), size=3) +
geom_line(aes(y = count, group=Model, col=Model, lty=Model), lwd=1) +
geom_text(data=score_text, aes(y=n, label=as.expression(aiccs), col=Model), size=6, family="serif") +
facet_wrap(Label ~ ., scales="free") +
xlab("Secondary cases (Z)") +
ylab("Frequency") +
scale_x_discrete(labels = Zalt_ticks) +
scale_y_continuous(label=scales::comma) +
custom_theme +
scale_fill_pathogen() +
scale_col_model() +
scale_shape_model() +
guides(fill = guide_legend(nrow=4),
col = guide_legend(nrow=3))
ggplot(model_accum, aes(x=Zalt)) +
geom_bar(data=offspring_accum, aes(weight=count, fill=Pathogen), alpha=1.) +
geom_point(aes(y = count, col=Model, shape=Model), size=3) +
geom_line(aes(y = count, group=Model, col=Model, lty=Model), lwd=1) +
geom_text(data=score_text, aes(y=n, label=aiccs, col=Model), size=6, family="serif") +
facet_wrap(Label ~ ., scales="free") +
xlab("Secondary cases (Z)") +
ylab("Frequency") +
scale_x_discrete(labels = Zalt_ticks) +
scale_y_continuous(label=scales::comma) +
custom_theme +
scale_fill_pathogen() +
scale_col_model() +
scale_shape_model() +
guides(fill = guide_legend(nrow=4),
col = guide_legend(nrow=3))
score_text = score_summary %>%
arrange(Dataset, Model) %>%
filter(Model %in% c("Negative Binomial", "Two-type", "Clinical")) %>%
mutate(n = as.vector(sapply(max.offspring$Max.n, function(x) x * c(0.9, 0.7, 0.5))),
wr = paste0("w = ", round(w, 2)),
aiccs = paste0("AICc = ", signif(AICc, 4)))
score_text$Zalt = 10.5
ggplot(model_accum, aes(x=Zalt)) +
geom_bar(data=offspring_accum, aes(weight=count, fill=Pathogen), alpha=1.) +
geom_point(aes(y = count, col=Model, shape=Model), size=3) +
geom_line(aes(y = count, group=Model, col=Model, lty=Model), lwd=1) +
geom_text(data=score_text, aes(y=n, label=aiccs, col=Model), size=6, family="serif") +
facet_wrap(Label ~ ., scales="free") +
xlab("Secondary cases (Z)") +
ylab("Frequency") +
scale_x_discrete(labels = Zalt_ticks) +
scale_y_continuous(label=scales::comma) +
custom_theme +
scale_fill_pathogen() +
scale_col_model() +
scale_shape_model() +
guides(fill = guide_legend(nrow=4),
col = guide_legend(nrow=3))
ggplot(model_accum, aes(x=Zalt)) +
geom_bar(data=offspring_accum, aes(weight=count, fill=Pathogen), alpha=1.) +
geom_point(aes(y = count, col=Model, shape=Model), size=3, alpha=0.8) +
geom_line(aes(y = count, group=Model, col=Model, lty=Model), lwd=1, alpha=0.8) +
geom_text(data=score_text, aes(y=n, label=aiccs, col=Model), size=6, family="serif") +
facet_wrap(Label ~ ., scales="free") +
xlab("Secondary cases (Z)") +
ylab("Frequency") +
scale_x_discrete(labels = Zalt_ticks) +
scale_y_continuous(label=scales::comma) +
custom_theme +
scale_fill_pathogen() +
scale_col_model() +
scale_shape_model() +
guides(fill = guide_legend(nrow=4),
col = guide_legend(nrow=3))
ggplot(model_accum, aes(x=Zalt)) +
geom_bar(data=offspring_accum, aes(weight=count, fill=Pathogen), alpha=1.) +
geom_point(aes(y = count, col=Model, shape=Model), size=3, alpha=0.5) +
geom_line(aes(y = count, group=Model, col=Model, lty=Model), lwd=1, alpha=0.5) +
geom_text(data=score_text, aes(y=n, label=aiccs, col=Model), size=6, family="serif") +
facet_wrap(Label ~ ., scales="free") +
xlab("Secondary cases (Z)") +
ylab("Frequency") +
scale_x_discrete(labels = Zalt_ticks) +
scale_y_continuous(label=scales::comma) +
custom_theme +
scale_fill_pathogen() +
scale_col_model() +
scale_shape_model() +
guides(fill = guide_legend(nrow=4),
col = guide_legend(nrow=3))
scale_fill_pathogen <- function(...){
ggplot2:::manual_scale(
'fill',
values = setNames(c("#ADB6B6", "#FDAF91", "#42B540","#91D1C2B2", "#E18727FF", "#EE4C97FF", "#ADB6B6", "#7E6148B2"), pathogen_levels),
drop=T,
...
)
}
scale_col_pathogen <- function(...){
ggplot2:::manual_scale(
'col',
values = setNames(c("#ADB6B6", "#FDAF91", "#42B540", "#91D1C2B2", "#E18727FF", "#EE4C97FF", "#ADB6B6", "#7E6148B2"), pathogen_levels),
...
)
}
ggplot(model_accum, aes(x=Zalt)) +
geom_bar(data=offspring_accum, aes(weight=count, fill=Pathogen), alpha=1.) +
geom_point(aes(y = count, col=Model, shape=Model), size=3, alpha=0.5) +
geom_line(aes(y = count, group=Model, col=Model, lty=Model), lwd=1, alpha=0.5) +
geom_text(data=score_text, aes(y=n, label=aiccs, col=Model), size=6, family="serif") +
facet_wrap(Label ~ ., scales="free") +
xlab("Secondary cases (Z)") +
ylab("Frequency") +
scale_x_discrete(labels = Zalt_ticks) +
scale_y_continuous(label=scales::comma) +
custom_theme +
scale_fill_pathogen() +
scale_col_model() +
scale_shape_model() +
guides(fill = guide_legend(nrow=4),
col = guide_legend(nrow=3))
ggplot(model_accum, aes(x=Zalt)) +
geom_bar(data=offspring_accum, aes(weight=count, fill=Pathogen), alpha=1.) +
geom_point(aes(y = count, col=Model, shape=Model), size=3, alpha=0.7) +
geom_line(aes(y = count, group=Model, col=Model, lty=Model), lwd=1, alpha=0.7) +
geom_text(data=score_text, aes(y=n, label=aiccs, col=Model), size=6, family="serif") +
facet_wrap(Label ~ ., scales="free") +
xlab("Secondary cases (Z)") +
ylab("Frequency") +
scale_x_discrete(labels = Zalt_ticks) +
scale_y_continuous(label=scales::comma) +
custom_theme +
scale_fill_pathogen() +
scale_col_model() +
scale_shape_model() +
guides(fill = guide_legend(nrow=4),
col = guide_legend(nrow=3))
ggsci:::ggsci_db$simpsons
scale_fill_pathogen <- function(...){
ggplot2:::manual_scale(
'fill',
values = setNames(c("#ADB6B6", "#FDAF91", "#42B540","#91D1C2B2", "#E18727FF", "#EE4C97FF", "#ADB6B6", "#FED439"), pathogen_levels),
drop=T,
...
)
}
scale_col_pathogen <- function(...){
ggplot2:::manual_scale(
'col',
values = setNames(c("#ADB6B6", "#FDAF91", "#42B540", "#91D1C2B2", "#E18727FF", "#EE4C97FF", "#ADB6B6", "#FED439"), pathogen_levels),
...
)
}
ggplot(model_accum, aes(x=Zalt)) +
geom_bar(data=offspring_accum, aes(weight=count, fill=Pathogen), alpha=1.) +
geom_point(aes(y = count, col=Model, shape=Model), size=3, alpha=0.7) +
geom_line(aes(y = count, group=Model, col=Model, lty=Model), lwd=1, alpha=0.7) +
geom_text(data=score_text, aes(y=n, label=aiccs, col=Model), size=6, family="serif") +
facet_wrap(Label ~ ., scales="free") +
xlab("Secondary cases (Z)") +
ylab("Frequency") +
scale_x_discrete(labels = Zalt_ticks) +
scale_y_continuous(label=scales::comma) +
custom_theme +
scale_fill_pathogen() +
scale_col_model() +
scale_shape_model() +
guides(fill = guide_legend(nrow=4),
col = guide_legend(nrow=3))
ggsave(paste0(output_dir, "offspring_fits.png"), dpi=600, width=14, height=14)
head(parms_summary)
min(parms_summary$ess)
library(lubridate)
(x = yday(Sys.Date()))
qpois(c(0.025, 0.975), 187/x*(365 - x)) + 187
#### Scores ####
## Plot score by model for each dataset ##
ggplot(score_summary, aes(x=Model, col=Pathogen, shape=Model)) +
geom_point(aes(y=w), size=4) +
facet_wrap(Label ~ ., nrow=5) +
xlab("Model") +
ylab("Akaike weight (w)") +
custom_theme + theme(axis.text.x = element_text(angle = 60, hjust=1), legend.position="right") +
scale_shape_model() +
scale_col_pathogen()
score_summary %>% filter(Model %in% c("Two-type", "Mixture")) %>% dplyr::select(Model, Dataset, AICc)
score_summary %>% filter(Model %in% c("Negative Binomial", "Mixture")) %>% dplyr::select(Model, Dataset, AICc)
score_summary %>% filter(Model %in% c("Negative Binomial", "Two-type")) %>% dplyr::select(Model, Dataset, AICc)
score_summary %>% filter(Model %in% c("Negative Binomial", "Mixture")) %>% dplyr::select(Model, Dataset, AICc)
score_summary %>% filter(Model %in% c("Two-type", "Mixture")) %>% dplyr::select(Model, Dataset, AICc)
## Plot R for each model * dataset ##
parms_summary %>%
filter(Parameter=="R", Model %in% c("Negative Binomial", "Two-type", "Clinical")) %>%
ggplot(aes(x = Label, col=Pathogen, shape=Model)) +
geom_linerange(aes(ymin = X2.5., ymax=X97.5.),position=position_dodge2(width=0.75), lwd=2, alpha=0.3) +
geom_linerange(aes(ymin = X25., ymax=X75.), position=position_dodge2(width=0.75), lwd=2, alpha=0.6) +
geom_point(aes(y=X50.), position=position_dodge2(width=0.75), size=3) +
geom_hline(yintercept = 1, lty=2, lwd=1) +
xlab("") +
ylab("Reproductive number (R)") +
custom_theme + theme(axis.text.x = element_text(angle = 60, hjust=1), legend.position = c(0.2,0.65)) +
scale_col_pathogen() +
scale_shape_model() +
guides(col = guide_legend(nrow=4))
### Superspreader fraction + relative transmissibility ###
parms_summary %>%
filter(Parameter %in% c("c", "ρ"), Model %in% c("Two-type")) %>%
ggplot(aes(x = Label, col=Pathogen)) +
geom_linerange(aes(ymin = X2.5., ymax=X97.5.),position=position_dodge2(width=0.5), lwd=2, alpha=0.3) +
geom_linerange(aes(ymin = X25., ymax=X75.), position=position_dodge2(width=0.5), lwd=2, alpha=0.6) +
geom_point(aes(y=X50.), position=position_dodge2(width=0.5), size=3) +
facet_grid(Parameter ~ .) +
xlab("") +
ylab("") +
ylab("Superspreader fraction (c)\nRelative transmissibility (ρ)") +
custom_theme + theme(axis.text.x = element_text(angle = 60, hjust=1), legend.position = "bottom") +
# scale_y_continuous(trans="log10") +
scale_y_continuous(labels=scales::percent) +
scale_col_pathogen() +
guides(col = guide_legend(nrow=4))
### Superspreader fraction + relative transmissibility ###
parms_summary %>%
filter(Parameter %in% c("c", "ρ"), Model %in% c("Two-type")) %>%
ggplot(aes(x = Label, col=Pathogen)) +
geom_linerange(aes(ymin = X2.5., ymax=X97.5.),position=position_dodge2(width=0.5), lwd=2, alpha=0.3) +
geom_linerange(aes(ymin = X25., ymax=X75.), position=position_dodge2(width=0.5), lwd=2, alpha=0.6) +
geom_point(aes(y=X50.), position=position_dodge2(width=0.5), size=3) +
# facet_grid(Parameter ~ .) +
xlab("") +
ylab("") +
ylab("Superspreader fraction (c)\nRelative transmissibility (ρ)") +
custom_theme + theme(axis.text.x = element_text(angle = 60, hjust=1), legend.position = "bottom") +
# scale_y_continuous(trans="log10") +
scale_y_continuous(labels=scales::percent) +
scale_col_pathogen() +
guides(col = guide_legend(nrow=4))
### Superspreader fraction + relative transmissibility ###
parms_summary %>%
filter(Parameter %in% c("c", "ρ"), Model %in% c("Mixture")) %>%
ggplot(aes(x = Label, col=Pathogen)) +
geom_linerange(aes(ymin = X2.5., ymax=X97.5.),position=position_dodge2(width=0.5), lwd=2, alpha=0.3) +
geom_linerange(aes(ymin = X25., ymax=X75.), position=position_dodge2(width=0.5), lwd=2, alpha=0.6) +
geom_point(aes(y=X50.), position=position_dodge2(width=0.5), size=3) +
# facet_grid(Parameter ~ .) +
xlab("") +
ylab("") +
ylab("Superspreader fraction (c)\nRelative transmissibility (ρ)") +
custom_theme + theme(axis.text.x = element_text(angle = 60, hjust=1), legend.position = "bottom") +
# scale_y_continuous(trans="log10") +
scale_y_continuous(labels=scales::percent) +
scale_col_pathogen() +
guides(col = guide_legend(nrow=4))
head(parms_summary)
parms_summary %>% filter(Model == "Two-type", Parameter %in%  c("c", "ρ")) %>% dplyr::select(Dataset, Parameter, X50.)
parms_summary %>% filter(Model == "Two-type", Parameter %in%  c("c")) %>% dplyr::select(X50.) %>% min
parms_summary %>% filter(Model == "Two-type", Parameter %in%  c("c")) %>% dplyr::select(X50.) %>% max
parms_summary %>% filter(Model == "Two-type", Parameter %in%  c("ρ")) %>% dplyr::select(X50.) %>% max
parms_summary %>% filter(Model == "Two-type", Parameter %in%  c("ρ")) %>% dplyr::select(X50.) %>% min
parms_summary %>% filter(Model == "Two-type", Parameter %in%  c("ρ")) %>% dplyr::select(mle) %>% min
parms_summary %>% filter(Model == "Two-type", Parameter %in%  c("ρ")) %>% dplyr::select(X50.)
parms_summary %>% filter(Model == "Two-type", Pathogen == "SARS-CoV-1", Parameter %in%  c("c"))
#### Derived parameters ####
### Extinction probability
full_chain %>%
filter(Model %in% c("Negative Binomial", "Two-type", "Clinical")) %>%
group_by(Label, Pathogen, Model) %>%
summarize(lower025 = quantile(q, 0.025),
lower25 = quantile(q, 0.25),
median = median(q),
upper75 = quantile(q, 0.75),
upper975 = quantile(q, 0.975)) %>%
ggplot(aes(x = Label, col=Pathogen, shape=Model)) +
geom_point(aes(y=median), position=position_dodge2(width=0.75), size=3) +
geom_linerange(aes(ymin = lower025, ymax=upper975), position=position_dodge2(width=0.75), lwd=2, alpha=0.3) +
geom_linerange(aes(ymin = lower25, ymax=upper975), position=position_dodge2(width=0.75), lwd=2, alpha=0.6) +
geom_hline(yintercept=0.20923955891032855, lty=2) +
annotate("text", x=5, y=0.17, size=6, label="Homogeneous limit", family="serif") +
xlab("") +
ylab("Extinction probability (q)") +
scale_y_continuous(labels=scales::percent, limits = c(0,1), breaks = seq(0,1,0.1)) +
custom_theme + theme(axis.text.x = element_text(angle = 60, hjust=1), legend.position = "right") +
scale_col_pathogen() +
scale_shape_model()
parms_summary %>% filter(Model == "Two-type", Pathogen == "SARS-CoV-1")
parms_summary %>%
filter(Parameter %in% c("σ"), Model %in% c("Two-type")) %>%
ggplot(aes(x = Label, col=Pathogen)) +
geom_linerange(aes(ymin = X2.5., ymax=X97.5.),position=position_dodge2(width=0.5), lwd=2, alpha=0.3) +
geom_linerange(aes(ymin = X25., ymax=X75.), position=position_dodge2(width=0.5), lwd=2, alpha=0.6) +
geom_point(aes(y=X50.), position=position_dodge2(width=0.5), size=3) +
# facet_grid(Parameter ~ .) +
xlab("") +
ylab("") +
ylab("Relative transmissibility (σ)") +
custom_theme + theme(axis.text.x = element_text(angle = 60, hjust=1), legend.position = "bottom") +
# scale_y_continuous(trans="log10") +
scale_y_continuous(labels=scales::percent) +
scale_col_pathogen() +
guides(col = guide_legend(nrow=4))
parms_summary %>% filter(Model == "Two-type", Parameter="σ") %>% dplyr::select(mle)
parms_summary %>% filter(Model == "Two-type", Parameter=="σ") %>% dplyr::select(mle)
parms_summary %>% filter(Model == "Two-type", Parameter=="σ") %>% dplyr::select(Dataset, Label, mle)
parms_summary %>% filter(Model == "Single-type", Parameter=="σ") %>% dplyr::select(Dataset, Label, mle)
(x = yday(Sys.Date()))
qpois(c(0.025, 0.975), 108/x*(365 - x)) + 108
parms_summary %>%
filter(Parameter %in% c("σ"), Model %in% c("Two-type")) %>%
ggplot(aes(x = Label, col=Pathogen)) +
geom_linerange(aes(ymin = X2.5., ymax=X97.5.),position=position_dodge2(width=0.5), lwd=2, alpha=0.3) +
geom_linerange(aes(ymin = X25., ymax=X75.), position=position_dodge2(width=0.5), lwd=2, alpha=0.6) +
geom_point(aes(y=X50.), position=position_dodge2(width=0.5), size=3) +
# facet_grid(Parameter ~ .) +
xlab("") +
ylab("") +
ylab("Relative transmissibility (σ)") +
custom_theme + theme(axis.text.x = element_text(angle = 60, hjust=1), legend.position = "bottom") +
# scale_y_continuous(trans="log10") +
scale_y_continuous(labels=scales::percent) +
scale_col_pathogen() #+
parms_summary %>%
filter(Parameter %in% c("σ"), Model %in% c("Two-type")) %>%
ggplot(aes(x = Label, col=Pathogen)) +
geom_linerange(aes(ymin = X2.5., ymax=X97.5.),position=position_dodge2(width=0.5), lwd=2, alpha=0.3) +
geom_linerange(aes(ymin = X25., ymax=X75.), position=position_dodge2(width=0.5), lwd=2, alpha=0.6) +
geom_point(aes(y=X50.), position=position_dodge2(width=0.5), size=3) +
# facet_grid(Parameter ~ .) +
xlab("") +
ylab("") +
ylab("Relative transmissibility (σ)") +
custom_theme + theme(axis.text.x = element_text(angle = 60, hjust=1)) +
# scale_y_continuous(trans="log10") +
scale_y_continuous(labels=scales::percent) +
scale_col_pathogen() #+
parms_summary %>%
filter(Parameter %in% c("σ"), Model %in% c("Two-type")) %>%
ggplot(aes(x = Label, col=Pathogen)) +
geom_linerange(aes(ymin = X2.5., ymax=X97.5.),position=position_dodge2(width=0.5), lwd=2, alpha=0.3) +
geom_linerange(aes(ymin = X25., ymax=X75.), position=position_dodge2(width=0.5), lwd=2, alpha=0.6) +
geom_point(aes(y=X50.), position=position_dodge2(width=0.5), size=3) +
# facet_grid(Parameter ~ .) +
xlab("") +
ylab("") +
ylab("Relative transmissibility (σ)") +
custom_theme + theme(axis.text.x = element_text(angle = 60, hjust=1)), legend.position = "right") +
parms_summary %>%
filter(Parameter %in% c("σ"), Model %in% c("Two-type")) %>%
ggplot(aes(x = Label, col=Pathogen)) +
geom_linerange(aes(ymin = X2.5., ymax=X97.5.),position=position_dodge2(width=0.5), lwd=2, alpha=0.3) +
geom_linerange(aes(ymin = X25., ymax=X75.), position=position_dodge2(width=0.5), lwd=2, alpha=0.6) +
geom_point(aes(y=X50.), position=position_dodge2(width=0.5), size=3) +
# facet_grid(Parameter ~ .) +
xlab("") +
ylab("") +
ylab("Relative transmissibility (σ)") +
custom_theme + theme(axis.text.x = element_text(angle = 60, hjust=1), legend.position = "right") +
# scale_y_continuous(trans="log10") +
scale_y_continuous(labels=scales::percent) +
scale_col_pathogen() #+
#### Scores ####
## Plot score by model for each dataset ##
ggplot(score_summary, aes(x=Model, col=Pathogen, shape=Model)) +
geom_point(aes(y=w), size=4) +
facet_wrap(Label ~ ., nrow=5) +
xlab("Model") +
ylab("Akaike weight (w)") +
custom_theme + theme(axis.text.x = element_text(angle = 60, hjust=1), legend.position="right") +
scale_shape_model() +
scale_col_pathogen()
model_levels = c("Negative Binomial", "Two-type",  "SEIR(2)", "Zero-inflated", "Clinical", "Single-type", "SEIR(1)")
relabel_model = function(x, levels=model_levels){
case_when(x == "Erlang" ~ levels[7],
x == "NegBin" ~ levels[1],
x == "ZeroInf" ~ levels[4],
x == "Mixture" ~ levels[3],
x == "Clinical" ~ levels[5],
x == "SingleType" ~ levels[6],
x == "TwoType" ~ levels[2],
x == "Variable1" ~ levels[6],
x == "Variable2" ~ levels[2]) %>% factor(levels)
}
scale_shape_model <- function(...){
ggplot2:::manual_scale(
'shape',
values = setNames(c(19,17,3,18,15,6,4), model_levels),
...
)
}
scale_col_model <- function(...){
ggplot2:::manual_scale(
'col',
values = setNames(c("#1B1919", "#00468B", "#AD002A", "#42B540", "#ADB6B6", "#0099B4", "#925E9F"), model_levels),
...
)
}
# Model performance
score_summary = read.csv(paste0(output_dir, "score_summary.csv"), stringsAsFactors = TRUE)
score_summary = cbind(str_split(score_summary$Dataset, "_", n=3, simplify=TRUE), score_summary)
